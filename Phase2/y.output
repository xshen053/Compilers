Grammar

    0 $accept: program $end

    1 program: functions
    2        | error

    3 functions: /* empty */
    4          | function functions

    5 function: FUNCTION ident SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    6 declarations: /* empty */
    7             | declaration SEMICOLON declarations
    8             | declaration error

    9 declaration: identifiers COLON INTEGER
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   11 identifiers: ident
   12            | ident COMMA identifiers

   13 ident: IDENT

   14 statements: statement SEMICOLON statements
   15           | statement SEMICOLON
   16           | statement error

   17 statement: svar
   18          | sif
   19          | swhile
   20          | sdo
   21          | sfor
   22          | sread
   23          | swrite
   24          | scontinue
   25          | sreturn

   26 svar: var ASSIGN expression

   27 sif: IF bool_expr THEN statements ENDIF
   28    | IF bool_expr THEN statements ELSE statements ENDIF

   29 swhile: WHILE bool_expr BEGINLOOP statements ENDLOOP

   30 sdo: DO BEGINLOOP statements ENDLOOP WHILE bool_expr

   31 sfor: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

   32 varLoop: /* empty */
   33        | COMMA var varLoop

   34 sread: READ var varLoop

   35 swrite: WRITE var varLoop

   36 scontinue: CONTINUE

   37 sreturn: RETURN expression

   38 bool_expr: relation_exprs
   39          | bool_expr OR relation_exprs

   40 relation_exprs: relation_expr
   41               | relation_exprs AND relation_expr

   42 relation_expr: NOT ece
   43              | ece
   44              | TRUE
   45              | FALSE
   46              | LPAREN bool_expr RPAREN

   47 ece: expression comp expression

   48 comp: EQ
   49     | NEQ
   50     | LT
   51     | GT
   52     | LTE
   53     | GTE

   54 expression: multi_expr addSubExpr
   55           | error

   56 addSubExpr: /* empty */
   57           | ADD expression
   58           | SUB expression

   59 multi_expr: term
   60           | term MULT multi_expr
   61           | term DIV multi_expr
   62           | term MOD multi_expr

   63 term: SUB var
   64     | var
   65     | SUB NUMBER
   66     | NUMBER
   67     | LPAREN expression RPAREN
   68     | ident LPAREN expression expressionLoop RPAREN

   69 expressionLoop: /* empty */
   70               | COMMA expression expressionLoop

   71 var: ident
   72    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   73    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256) 2 8 16 55
FUNCTION (258) 5
BEGINPARAMS (259) 5
ENDPARAMS (260) 5
BEGINLOCALS (261) 5
ENDLOCALS (262) 5
BEGINBODY (263) 5
ENDBODY (264) 5
INTEGER (265) 9 10
ARRAY (266) 10
OF (267) 10
IF (268) 27 28
THEN (269) 27 28
ENDIF (270) 27 28
ELSE (271) 28
WHILE (272) 29 30
DO (273) 30
FOR (274) 31
BEGINLOOP (275) 29 30 31
ENDLOOP (276) 29 30 31
CONTINUE (277) 36
READ (278) 34
WRITE (279) 35
TRUE (280) 44
FALSE (281) 45
ASSIGN (282) 26 31
SEMICOLON (283) 5 7 14 15 31
COLON (284) 9 10
COMMA (285) 12 33 70
LPAREN (286) 46 67 68
RPAREN (287) 46 67 68
L_SQUARE_BRACKET (288) 10 72 73
R_SQUARE_BRACKET (289) 10 72 73
RETURN (290) 37
MULT (291) 60
DIV (292) 61
MOD (293) 62
ADD (294) 57
SUB (295) 58 63 65
LT (296) 50
LTE (297) 52
GT (298) 51
GTE (299) 53
EQ (300) 48
NEQ (301) 49
NOT (302) 42
AND (303) 41
OR (304) 39
NUMBER (305) 10 31 65 66
IDENT (306) 13


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1 2, on right: 0
functions (54)
    on left: 3 4, on right: 1 4
function (55)
    on left: 5, on right: 4
declarations (56)
    on left: 6 7 8, on right: 5 7
declaration (57)
    on left: 9 10, on right: 7 8
identifiers (58)
    on left: 11 12, on right: 9 10 12
ident (59)
    on left: 13, on right: 5 11 12 68 71 72 73
statements (60)
    on left: 14 15 16, on right: 5 14 27 28 29 30 31
statement (61)
    on left: 17 18 19 20 21 22 23 24 25, on right: 14 15 16
svar (62)
    on left: 26, on right: 17
sif (63)
    on left: 27 28, on right: 18
swhile (64)
    on left: 29, on right: 19
sdo (65)
    on left: 30, on right: 20
sfor (66)
    on left: 31, on right: 21
varLoop (67)
    on left: 32 33, on right: 33 34 35
sread (68)
    on left: 34, on right: 22
swrite (69)
    on left: 35, on right: 23
scontinue (70)
    on left: 36, on right: 24
sreturn (71)
    on left: 37, on right: 25
bool_expr (72)
    on left: 38 39, on right: 27 28 29 30 31 39 46
relation_exprs (73)
    on left: 40 41, on right: 38 39 41
relation_expr (74)
    on left: 42 43 44 45 46, on right: 40 41
ece (75)
    on left: 47, on right: 42 43
comp (76)
    on left: 48 49 50 51 52 53, on right: 47
expression (77)
    on left: 54 55, on right: 26 31 37 47 57 58 67 68 70 72 73
addSubExpr (78)
    on left: 56 57 58, on right: 54
multi_expr (79)
    on left: 59 60 61 62, on right: 54 60 61 62
term (80)
    on left: 63 64 65 66 67 68, on right: 59 60 61 62
expressionLoop (81)
    on left: 69 70, on right: 68 70
var (82)
    on left: 71 72 73, on right: 26 31 33 34 35 63 64


state 0

    0 $accept: . program $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $end  reduce using rule 3 (functions)

    program    go to state 3
    functions  go to state 4
    function   go to state 5


state 1

    2 program: error .

    $default  reduce using rule 2 (program)


state 2

    5 function: FUNCTION . ident SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 6

    ident  go to state 7


state 3

    0 $accept: program . $end

    $end  shift, and go to state 8


state 4

    1 program: functions .

    $default  reduce using rule 1 (program)


state 5

    4 functions: function . functions

    FUNCTION  shift, and go to state 2

    $default  reduce using rule 3 (functions)

    functions  go to state 9
    function   go to state 5


state 6

   13 ident: IDENT .

    $default  reduce using rule 13 (ident)


state 7

    5 function: FUNCTION ident . SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    SEMICOLON  shift, and go to state 10


state 8

    0 $accept: program $end .

    $default  accept


state 9

    4 functions: function functions .

    $default  reduce using rule 4 (functions)


state 10

    5 function: FUNCTION ident SEMICOLON . BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINPARAMS  shift, and go to state 11


state 11

    5 function: FUNCTION ident SEMICOLON BEGINPARAMS . declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 6

    $default  reduce using rule 6 (declarations)

    declarations  go to state 12
    declaration   go to state 13
    identifiers   go to state 14
    ident         go to state 15


state 12

    5 function: FUNCTION ident SEMICOLON BEGINPARAMS declarations . ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    ENDPARAMS  shift, and go to state 16


state 13

    7 declarations: declaration . SEMICOLON declarations
    8             | declaration . error

    error      shift, and go to state 17
    SEMICOLON  shift, and go to state 18


state 14

    9 declaration: identifiers . COLON INTEGER
   10            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 19


state 15

   11 identifiers: ident .
   12            | ident . COMMA identifiers

    COMMA  shift, and go to state 20

    $default  reduce using rule 11 (identifiers)


state 16

    5 function: FUNCTION ident SEMICOLON BEGINPARAMS declarations ENDPARAMS . BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINLOCALS  shift, and go to state 21


state 17

    8 declarations: declaration error .

    $default  reduce using rule 8 (declarations)


state 18

    7 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 6

    $default  reduce using rule 6 (declarations)

    declarations  go to state 22
    declaration   go to state 13
    identifiers   go to state 14
    ident         go to state 15


state 19

    9 declaration: identifiers COLON . INTEGER
   10            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


state 20

   12 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 6

    identifiers  go to state 25
    ident        go to state 15


state 21

    5 function: FUNCTION ident SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS . declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 6

    $default  reduce using rule 6 (declarations)

    declarations  go to state 26
    declaration   go to state 13
    identifiers   go to state 14
    ident         go to state 15


state 22

    7 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 7 (declarations)


state 23

    9 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 9 (declaration)


state 24

   10 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


state 25

   12 identifiers: ident COMMA identifiers .

    $default  reduce using rule 12 (identifiers)


state 26

    5 function: FUNCTION ident SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations . ENDLOCALS BEGINBODY statements ENDBODY

    ENDLOCALS  shift, and go to state 28


state 27

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29


state 28

    5 function: FUNCTION ident SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS . BEGINBODY statements ENDBODY

    BEGINBODY  shift, and go to state 30


state 29

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 31


state 30

    5 function: FUNCTION ident SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY . statements ENDBODY

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 6

    ident       go to state 40
    statements  go to state 41
    statement   go to state 42
    svar        go to state 43
    sif         go to state 44
    swhile      go to state 45
    sdo         go to state 46
    sfor        go to state 47
    sread       go to state 48
    swrite      go to state 49
    scontinue   go to state 50
    sreturn     go to state 51
    var         go to state 52


state 31

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 53


state 32

   27 sif: IF . bool_expr THEN statements ENDIF
   28    | IF . bool_expr THEN statements ELSE statements ENDIF

    error   shift, and go to state 54
    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 57
    SUB     shift, and go to state 58
    NOT     shift, and go to state 59
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident           go to state 61
    bool_expr       go to state 62
    relation_exprs  go to state 63
    relation_expr   go to state 64
    ece             go to state 65
    expression      go to state 66
    multi_expr      go to state 67
    term            go to state 68
    var             go to state 69


state 33

   29 swhile: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    error   shift, and go to state 54
    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 57
    SUB     shift, and go to state 58
    NOT     shift, and go to state 59
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident           go to state 61
    bool_expr       go to state 70
    relation_exprs  go to state 63
    relation_expr   go to state 64
    ece             go to state 65
    expression      go to state 66
    multi_expr      go to state 67
    term            go to state 68
    var             go to state 69


state 34

   30 sdo: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 71


state 35

   31 sfor: FOR . var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 6

    ident  go to state 40
    var    go to state 72


state 36

   36 scontinue: CONTINUE .

    $default  reduce using rule 36 (scontinue)


state 37

   34 sread: READ . var varLoop

    IDENT  shift, and go to state 6

    ident  go to state 40
    var    go to state 73


state 38

   35 swrite: WRITE . var varLoop

    IDENT  shift, and go to state 6

    ident  go to state 40
    var    go to state 74


state 39

   37 sreturn: RETURN . expression

    error   shift, and go to state 54
    LPAREN  shift, and go to state 75
    SUB     shift, and go to state 58
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident       go to state 61
    expression  go to state 76
    multi_expr  go to state 67
    term        go to state 68
    var         go to state 69


state 40

   71 var: ident .
   72    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   73    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 77

    $default  reduce using rule 71 (var)


state 41

    5 function: FUNCTION ident SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements . ENDBODY

    ENDBODY  shift, and go to state 78


state 42

   14 statements: statement . SEMICOLON statements
   15           | statement . SEMICOLON
   16           | statement . error

    error      shift, and go to state 79
    SEMICOLON  shift, and go to state 80


state 43

   17 statement: svar .

    $default  reduce using rule 17 (statement)


state 44

   18 statement: sif .

    $default  reduce using rule 18 (statement)


state 45

   19 statement: swhile .

    $default  reduce using rule 19 (statement)


state 46

   20 statement: sdo .

    $default  reduce using rule 20 (statement)


state 47

   21 statement: sfor .

    $default  reduce using rule 21 (statement)


state 48

   22 statement: sread .

    $default  reduce using rule 22 (statement)


state 49

   23 statement: swrite .

    $default  reduce using rule 23 (statement)


state 50

   24 statement: scontinue .

    $default  reduce using rule 24 (statement)


state 51

   25 statement: sreturn .

    $default  reduce using rule 25 (statement)


state 52

   26 svar: var . ASSIGN expression

    ASSIGN  shift, and go to state 81


state 53

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 82


state 54

   55 expression: error .

    $default  reduce using rule 55 (expression)


state 55

   44 relation_expr: TRUE .

    $default  reduce using rule 44 (relation_expr)


state 56

   45 relation_expr: FALSE .

    $default  reduce using rule 45 (relation_expr)


state 57

   46 relation_expr: LPAREN . bool_expr RPAREN
   67 term: LPAREN . expression RPAREN

    error   shift, and go to state 54
    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 57
    SUB     shift, and go to state 58
    NOT     shift, and go to state 59
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident           go to state 61
    bool_expr       go to state 83
    relation_exprs  go to state 63
    relation_expr   go to state 64
    ece             go to state 65
    expression      go to state 84
    multi_expr      go to state 67
    term            go to state 68
    var             go to state 69


state 58

   63 term: SUB . var
   65     | SUB . NUMBER

    NUMBER  shift, and go to state 85
    IDENT   shift, and go to state 6

    ident  go to state 40
    var    go to state 86


state 59

   42 relation_expr: NOT . ece

    error   shift, and go to state 54
    LPAREN  shift, and go to state 75
    SUB     shift, and go to state 58
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident       go to state 61
    ece         go to state 87
    expression  go to state 66
    multi_expr  go to state 67
    term        go to state 68
    var         go to state 69


state 60

   66 term: NUMBER .

    $default  reduce using rule 66 (term)


state 61

   68 term: ident . LPAREN expression expressionLoop RPAREN
   71 var: ident .
   72    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   73    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    LPAREN            shift, and go to state 88
    L_SQUARE_BRACKET  shift, and go to state 77

    $default  reduce using rule 71 (var)


state 62

   27 sif: IF bool_expr . THEN statements ENDIF
   28    | IF bool_expr . THEN statements ELSE statements ENDIF
   39 bool_expr: bool_expr . OR relation_exprs

    THEN  shift, and go to state 89
    OR    shift, and go to state 90


state 63

   38 bool_expr: relation_exprs .
   41 relation_exprs: relation_exprs . AND relation_expr

    AND  shift, and go to state 91

    $default  reduce using rule 38 (bool_expr)


state 64

   40 relation_exprs: relation_expr .

    $default  reduce using rule 40 (relation_exprs)


state 65

   43 relation_expr: ece .

    $default  reduce using rule 43 (relation_expr)


state 66

   47 ece: expression . comp expression

    LT   shift, and go to state 92
    LTE  shift, and go to state 93
    GT   shift, and go to state 94
    GTE  shift, and go to state 95
    EQ   shift, and go to state 96
    NEQ  shift, and go to state 97

    comp  go to state 98


state 67

   54 expression: multi_expr . addSubExpr

    ADD  shift, and go to state 99
    SUB  shift, and go to state 100

    $default  reduce using rule 56 (addSubExpr)

    addSubExpr  go to state 101


state 68

   59 multi_expr: term .
   60           | term . MULT multi_expr
   61           | term . DIV multi_expr
   62           | term . MOD multi_expr

    MULT  shift, and go to state 102
    DIV   shift, and go to state 103
    MOD   shift, and go to state 104

    $default  reduce using rule 59 (multi_expr)


state 69

   64 term: var .

    $default  reduce using rule 64 (term)


state 70

   29 swhile: WHILE bool_expr . BEGINLOOP statements ENDLOOP
   39 bool_expr: bool_expr . OR relation_exprs

    BEGINLOOP  shift, and go to state 105
    OR         shift, and go to state 90


state 71

   30 sdo: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 6

    ident       go to state 40
    statements  go to state 106
    statement   go to state 42
    svar        go to state 43
    sif         go to state 44
    swhile      go to state 45
    sdo         go to state 46
    sfor        go to state 47
    sread       go to state 48
    swrite      go to state 49
    scontinue   go to state 50
    sreturn     go to state 51
    var         go to state 52


state 72

   31 sfor: FOR var . ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 107


state 73

   34 sread: READ var . varLoop

    COMMA  shift, and go to state 108

    $default  reduce using rule 32 (varLoop)

    varLoop  go to state 109


state 74

   35 swrite: WRITE var . varLoop

    COMMA  shift, and go to state 108

    $default  reduce using rule 32 (varLoop)

    varLoop  go to state 110


state 75

   67 term: LPAREN . expression RPAREN

    error   shift, and go to state 54
    LPAREN  shift, and go to state 75
    SUB     shift, and go to state 58
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident       go to state 61
    expression  go to state 111
    multi_expr  go to state 67
    term        go to state 68
    var         go to state 69


state 76

   37 sreturn: RETURN expression .

    $default  reduce using rule 37 (sreturn)


state 77

   72 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   73    | ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    error   shift, and go to state 54
    LPAREN  shift, and go to state 75
    SUB     shift, and go to state 58
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident       go to state 61
    expression  go to state 112
    multi_expr  go to state 67
    term        go to state 68
    var         go to state 69


state 78

    5 function: FUNCTION ident SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY .

    $default  reduce using rule 5 (function)


state 79

   16 statements: statement error .

    $default  reduce using rule 16 (statements)


state 80

   14 statements: statement SEMICOLON . statements
   15           | statement SEMICOLON .

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 6

    $default  reduce using rule 15 (statements)

    ident       go to state 40
    statements  go to state 113
    statement   go to state 42
    svar        go to state 43
    sif         go to state 44
    swhile      go to state 45
    sdo         go to state 46
    sfor        go to state 47
    sread       go to state 48
    swrite      go to state 49
    scontinue   go to state 50
    sreturn     go to state 51
    var         go to state 52


state 81

   26 svar: var ASSIGN . expression

    error   shift, and go to state 54
    LPAREN  shift, and go to state 75
    SUB     shift, and go to state 58
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident       go to state 61
    expression  go to state 114
    multi_expr  go to state 67
    term        go to state 68
    var         go to state 69


state 82

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 10 (declaration)


state 83

   39 bool_expr: bool_expr . OR relation_exprs
   46 relation_expr: LPAREN bool_expr . RPAREN

    RPAREN  shift, and go to state 115
    OR      shift, and go to state 90


state 84

   47 ece: expression . comp expression
   67 term: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 116
    LT      shift, and go to state 92
    LTE     shift, and go to state 93
    GT      shift, and go to state 94
    GTE     shift, and go to state 95
    EQ      shift, and go to state 96
    NEQ     shift, and go to state 97

    comp  go to state 98


state 85

   65 term: SUB NUMBER .

    $default  reduce using rule 65 (term)


state 86

   63 term: SUB var .

    $default  reduce using rule 63 (term)


state 87

   42 relation_expr: NOT ece .

    $default  reduce using rule 42 (relation_expr)


state 88

   68 term: ident LPAREN . expression expressionLoop RPAREN

    error   shift, and go to state 54
    LPAREN  shift, and go to state 75
    SUB     shift, and go to state 58
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident       go to state 61
    expression  go to state 117
    multi_expr  go to state 67
    term        go to state 68
    var         go to state 69


state 89

   27 sif: IF bool_expr THEN . statements ENDIF
   28    | IF bool_expr THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 6

    ident       go to state 40
    statements  go to state 118
    statement   go to state 42
    svar        go to state 43
    sif         go to state 44
    swhile      go to state 45
    sdo         go to state 46
    sfor        go to state 47
    sread       go to state 48
    swrite      go to state 49
    scontinue   go to state 50
    sreturn     go to state 51
    var         go to state 52


state 90

   39 bool_expr: bool_expr OR . relation_exprs

    error   shift, and go to state 54
    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 57
    SUB     shift, and go to state 58
    NOT     shift, and go to state 59
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident           go to state 61
    relation_exprs  go to state 119
    relation_expr   go to state 64
    ece             go to state 65
    expression      go to state 66
    multi_expr      go to state 67
    term            go to state 68
    var             go to state 69


state 91

   41 relation_exprs: relation_exprs AND . relation_expr

    error   shift, and go to state 54
    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 57
    SUB     shift, and go to state 58
    NOT     shift, and go to state 59
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident          go to state 61
    relation_expr  go to state 120
    ece            go to state 65
    expression     go to state 66
    multi_expr     go to state 67
    term           go to state 68
    var            go to state 69


state 92

   50 comp: LT .

    $default  reduce using rule 50 (comp)


state 93

   52 comp: LTE .

    $default  reduce using rule 52 (comp)


state 94

   51 comp: GT .

    $default  reduce using rule 51 (comp)


state 95

   53 comp: GTE .

    $default  reduce using rule 53 (comp)


state 96

   48 comp: EQ .

    $default  reduce using rule 48 (comp)


state 97

   49 comp: NEQ .

    $default  reduce using rule 49 (comp)


state 98

   47 ece: expression comp . expression

    error   shift, and go to state 54
    LPAREN  shift, and go to state 75
    SUB     shift, and go to state 58
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident       go to state 61
    expression  go to state 121
    multi_expr  go to state 67
    term        go to state 68
    var         go to state 69


state 99

   57 addSubExpr: ADD . expression

    error   shift, and go to state 54
    LPAREN  shift, and go to state 75
    SUB     shift, and go to state 58
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident       go to state 61
    expression  go to state 122
    multi_expr  go to state 67
    term        go to state 68
    var         go to state 69


state 100

   58 addSubExpr: SUB . expression

    error   shift, and go to state 54
    LPAREN  shift, and go to state 75
    SUB     shift, and go to state 58
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident       go to state 61
    expression  go to state 123
    multi_expr  go to state 67
    term        go to state 68
    var         go to state 69


state 101

   54 expression: multi_expr addSubExpr .

    $default  reduce using rule 54 (expression)


state 102

   60 multi_expr: term MULT . multi_expr

    LPAREN  shift, and go to state 75
    SUB     shift, and go to state 58
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident       go to state 61
    multi_expr  go to state 124
    term        go to state 68
    var         go to state 69


state 103

   61 multi_expr: term DIV . multi_expr

    LPAREN  shift, and go to state 75
    SUB     shift, and go to state 58
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident       go to state 61
    multi_expr  go to state 125
    term        go to state 68
    var         go to state 69


state 104

   62 multi_expr: term MOD . multi_expr

    LPAREN  shift, and go to state 75
    SUB     shift, and go to state 58
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident       go to state 61
    multi_expr  go to state 126
    term        go to state 68
    var         go to state 69


state 105

   29 swhile: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 6

    ident       go to state 40
    statements  go to state 127
    statement   go to state 42
    svar        go to state 43
    sif         go to state 44
    swhile      go to state 45
    sdo         go to state 46
    sfor        go to state 47
    sread       go to state 48
    swrite      go to state 49
    scontinue   go to state 50
    sreturn     go to state 51
    var         go to state 52


state 106

   30 sdo: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 128


state 107

   31 sfor: FOR var ASSIGN . NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 129


state 108

   33 varLoop: COMMA . var varLoop

    IDENT  shift, and go to state 6

    ident  go to state 40
    var    go to state 130


state 109

   34 sread: READ var varLoop .

    $default  reduce using rule 34 (sread)


state 110

   35 swrite: WRITE var varLoop .

    $default  reduce using rule 35 (swrite)


state 111

   67 term: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 116


state 112

   72 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   73    | ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 131


state 113

   14 statements: statement SEMICOLON statements .

    $default  reduce using rule 14 (statements)


state 114

   26 svar: var ASSIGN expression .

    $default  reduce using rule 26 (svar)


state 115

   46 relation_expr: LPAREN bool_expr RPAREN .

    $default  reduce using rule 46 (relation_expr)


state 116

   67 term: LPAREN expression RPAREN .

    $default  reduce using rule 67 (term)


state 117

   68 term: ident LPAREN expression . expressionLoop RPAREN

    COMMA  shift, and go to state 132

    $default  reduce using rule 69 (expressionLoop)

    expressionLoop  go to state 133


state 118

   27 sif: IF bool_expr THEN statements . ENDIF
   28    | IF bool_expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 134
    ELSE   shift, and go to state 135


state 119

   39 bool_expr: bool_expr OR relation_exprs .
   41 relation_exprs: relation_exprs . AND relation_expr

    AND  shift, and go to state 91

    $default  reduce using rule 39 (bool_expr)


state 120

   41 relation_exprs: relation_exprs AND relation_expr .

    $default  reduce using rule 41 (relation_exprs)


state 121

   47 ece: expression comp expression .

    $default  reduce using rule 47 (ece)


state 122

   57 addSubExpr: ADD expression .

    $default  reduce using rule 57 (addSubExpr)


state 123

   58 addSubExpr: SUB expression .

    $default  reduce using rule 58 (addSubExpr)


state 124

   60 multi_expr: term MULT multi_expr .

    $default  reduce using rule 60 (multi_expr)


state 125

   61 multi_expr: term DIV multi_expr .

    $default  reduce using rule 61 (multi_expr)


state 126

   62 multi_expr: term MOD multi_expr .

    $default  reduce using rule 62 (multi_expr)


state 127

   29 swhile: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 136


state 128

   30 sdo: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 137


state 129

   31 sfor: FOR var ASSIGN NUMBER . SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 138


state 130

   33 varLoop: COMMA var . varLoop

    COMMA  shift, and go to state 108

    $default  reduce using rule 32 (varLoop)

    varLoop  go to state 139


state 131

   72 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   73    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    L_SQUARE_BRACKET  shift, and go to state 140

    $default  reduce using rule 73 (var)


state 132

   70 expressionLoop: COMMA . expression expressionLoop

    error   shift, and go to state 54
    LPAREN  shift, and go to state 75
    SUB     shift, and go to state 58
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident       go to state 61
    expression  go to state 141
    multi_expr  go to state 67
    term        go to state 68
    var         go to state 69


state 133

   68 term: ident LPAREN expression expressionLoop . RPAREN

    RPAREN  shift, and go to state 142


state 134

   27 sif: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 27 (sif)


state 135

   28 sif: IF bool_expr THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 6

    ident       go to state 40
    statements  go to state 143
    statement   go to state 42
    svar        go to state 43
    sif         go to state 44
    swhile      go to state 45
    sdo         go to state 46
    sfor        go to state 47
    sread       go to state 48
    swrite      go to state 49
    scontinue   go to state 50
    sreturn     go to state 51
    var         go to state 52


state 136

   29 swhile: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 29 (swhile)


state 137

   30 sdo: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    error   shift, and go to state 54
    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 57
    SUB     shift, and go to state 58
    NOT     shift, and go to state 59
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident           go to state 61
    bool_expr       go to state 144
    relation_exprs  go to state 63
    relation_expr   go to state 64
    ece             go to state 65
    expression      go to state 66
    multi_expr      go to state 67
    term            go to state 68
    var             go to state 69


state 138

   31 sfor: FOR var ASSIGN NUMBER SEMICOLON . bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    error   shift, and go to state 54
    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 57
    SUB     shift, and go to state 58
    NOT     shift, and go to state 59
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident           go to state 61
    bool_expr       go to state 145
    relation_exprs  go to state 63
    relation_expr   go to state 64
    ece             go to state 65
    expression      go to state 66
    multi_expr      go to state 67
    term            go to state 68
    var             go to state 69


state 139

   33 varLoop: COMMA var varLoop .

    $default  reduce using rule 33 (varLoop)


state 140

   72 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    error   shift, and go to state 54
    LPAREN  shift, and go to state 75
    SUB     shift, and go to state 58
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident       go to state 61
    expression  go to state 146
    multi_expr  go to state 67
    term        go to state 68
    var         go to state 69


state 141

   70 expressionLoop: COMMA expression . expressionLoop

    COMMA  shift, and go to state 132

    $default  reduce using rule 69 (expressionLoop)

    expressionLoop  go to state 147


state 142

   68 term: ident LPAREN expression expressionLoop RPAREN .

    $default  reduce using rule 68 (term)


state 143

   28 sif: IF bool_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 148


state 144

   30 sdo: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .
   39 bool_expr: bool_expr . OR relation_exprs

    OR  shift, and go to state 90

    $default  reduce using rule 30 (sdo)


state 145

   31 sfor: FOR var ASSIGN NUMBER SEMICOLON bool_expr . SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   39 bool_expr: bool_expr . OR relation_exprs

    SEMICOLON  shift, and go to state 149
    OR         shift, and go to state 90


state 146

   72 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 150


state 147

   70 expressionLoop: COMMA expression expressionLoop .

    $default  reduce using rule 70 (expressionLoop)


state 148

   28 sif: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 28 (sif)


state 149

   31 sfor: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON . var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 6

    ident  go to state 40
    var    go to state 151


state 150

   72 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 72 (var)


state 151

   31 sfor: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 152


state 152

   31 sfor: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN . expression BEGINLOOP statements ENDLOOP

    error   shift, and go to state 54
    LPAREN  shift, and go to state 75
    SUB     shift, and go to state 58
    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 6

    ident       go to state 61
    expression  go to state 153
    multi_expr  go to state 67
    term        go to state 68
    var         go to state 69


state 153

   31 sfor: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 154


state 154

   31 sfor: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 6

    ident       go to state 40
    statements  go to state 155
    statement   go to state 42
    svar        go to state 43
    sif         go to state 44
    swhile      go to state 45
    sdo         go to state 46
    sfor        go to state 47
    sread       go to state 48
    swrite      go to state 49
    scontinue   go to state 50
    sreturn     go to state 51
    var         go to state 52


state 155

   31 sfor: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 156


state 156

   31 sfor: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 31 (sfor)
